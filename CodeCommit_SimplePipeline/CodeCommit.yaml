Parameters:
  Cidrip:
    Type: String 
    Default: 70.80.213.205/32

Resources:
  CodeCommitRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: CodeCommitSimple Repository
      RepositoryName: mydemoRepo 
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: 
              Service: 
                - ec2.amazonaws.com 
            Action:
              - sts:AssumeRole
      Description: ec2 role for codedeploy 
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy
  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: 
              Service: 
                - codedeploy.amazonaws.com 
            Action:
              - sts:AssumeRole
      Description: CodeDeploy Role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
  
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: SecurityGroup for EC2Instances-pipeline
      GroupName: 'EC2-pipeline'
      SecurityGroupIngress: 
        - CidrIp: !Ref Cidrip 
          Description: 'Inbound port http'
          IpProtocol: tcp 
          FromPort: 80
          ToPort: 80
        - CidrIp: !Ref Cidrip 
          Description: 'Inbound port ssh'
          IpProtocol: tcp 
          FromPort: 22
          ToPort: 22
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: EC2Instance-pipelineprofile #nospaces
      Roles:                        #be aware of syntax here, it's a list of strings
        - 
          !Ref EC2InstanceRole
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: "ami-0dc2d3e4c0f9ebd18" 
      InstanceType: t2.micro
      #LaunchTemplate: 
      SecurityGroups:
        - 
          !Ref SecurityGroup
      UserData:
        Fn::Base64: 
          !Sub |
          #!/bin/bash
          yum -y update
          yum install -y ruby
          yum install -y aws-cli
          cd /home/ec2-user
          wget https://aws-codedeploy-us-east-2.s3.us-east-2.amazonaws.com/latest/install
          chmod +x ./install
          ./install auto

      IamInstanceProfile: !Ref EC2InstanceProfile 
      Tags:
        - Key: Name 
          Value: MyCodePipelineDemo

  CodeDeployApp:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: MyDemoApplication
      ComputePlatform: Server 
  CodeDeployGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref "CodeDeployApp" 
      DeploymentConfigName: CodeDeployDefault.OneAtATime 
      DeploymentGroupName: MydeployementGroup
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      Ec2TagFilters:
        - Type: KEY_AND_VALUE
          Key: Name 
          Value: MyCodePipelineDemo

Outputs:
  Cloneurl:
    Value: !GetAtt CodeCommitRepo.CloneUrlHttp  
  Dnsurl:
    Value: !GetAtt EC2Instance.PublicDnsName 